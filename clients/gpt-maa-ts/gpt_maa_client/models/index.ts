/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type ApiError, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AgentDescription extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The name of the agent
     */
    agentName?: string | null;
    /**
     * A list of agent parameters that you can extract from the user's prompt.
     */
    agentParameterNames?: string[] | null;
    /**
     * The description of this agent, its purpose and capabilities.
     */
    description?: string | null;
    /**
     * This agent ONLY generates if user mentioned one of these topics
     */
    topics?: string[] | null;
}
/**
 * This schema represents a generated plan to execute agents to fulfill the user's request. The chat message should be non-technical - do NOT mention agents.
 */
export interface AgentExecutionPlanSchema extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The chat response to the user's message - a friendly non-technical message. Do NOT mention agents.
     */
    chatMessage?: string | null;
    /**
     * The ordered list of agents that you recommend should be used to handle the user's prompt. Only the most relevant agents should be recommended.
     */
    recommendedAgents?: RecommendedAgent[] | null;
}
export type BlackboardFormat = (typeof BlackboardFormatObject)[keyof typeof BlackboardFormatObject];
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AgentDescription}
 */
// @ts-ignore
export function createAgentDescriptionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAgentDescription;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AgentExecutionPlanSchema}
 */
// @ts-ignore
export function createAgentExecutionPlanSchemaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAgentExecutionPlanSchema;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FunctionAgentDefinitionMinimal_agent_parameters}
 */
// @ts-ignore
export function createFunctionAgentDefinitionMinimal_agent_parametersFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFunctionAgentDefinitionMinimal_agent_parameters;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FunctionAgentDefinitionMinimal}
 */
// @ts-ignore
export function createFunctionAgentDefinitionMinimalFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFunctionAgentDefinitionMinimal;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FunctionCallBlackboardInput}
 */
// @ts-ignore
export function createFunctionCallBlackboardInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFunctionCallBlackboardInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FunctionCallBlackboardOutput}
 */
// @ts-ignore
export function createFunctionCallBlackboardOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFunctionCallBlackboardOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FunctionCallGenerateRequest}
 */
// @ts-ignore
export function createFunctionCallGenerateRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFunctionCallGenerateRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FunctionCallSchema_parameters}
 */
// @ts-ignore
export function createFunctionCallSchema_parametersFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFunctionCallSchema_parameters;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FunctionCallSchema}
 */
// @ts-ignore
export function createFunctionCallSchemaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFunctionCallSchema;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FunctionSpecSchema}
 */
// @ts-ignore
export function createFunctionSpecSchemaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFunctionSpecSchema;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GeneratePlanRequest}
 */
// @ts-ignore
export function createGeneratePlanRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGeneratePlanRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HTTPValidationError}
 */
// @ts-ignore
export function createHTTPValidationErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHTTPValidationError;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Message}
 */
// @ts-ignore
export function createMessageFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMessage;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ParameterSpec}
 */
// @ts-ignore
export function createParameterSpecFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoParameterSpec;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RecommendedAgent_agent_parameters}
 */
// @ts-ignore
export function createRecommendedAgent_agent_parametersFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRecommendedAgent_agent_parameters;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RecommendedAgent}
 */
// @ts-ignore
export function createRecommendedAgentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRecommendedAgent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ValidationError}
 */
// @ts-ignore
export function createValidationErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoValidationError;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAgentDescription(agentDescription: Partial<AgentDescription> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "agent_name": n => { agentDescription.agentName = n.getStringValue(); },
        "agent_parameter_names": n => { agentDescription.agentParameterNames = n.getCollectionOfPrimitiveValues<string>(); },
        "description": n => { agentDescription.description = n.getStringValue(); },
        "topics": n => { agentDescription.topics = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAgentExecutionPlanSchema(agentExecutionPlanSchema: Partial<AgentExecutionPlanSchema> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "chat_message": n => { agentExecutionPlanSchema.chatMessage = n.getStringValue(); },
        "recommended_agents": n => { agentExecutionPlanSchema.recommendedAgents = n.getCollectionOfObjectValues<RecommendedAgent>(createRecommendedAgentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFunctionAgentDefinitionMinimal(functionAgentDefinitionMinimal: Partial<FunctionAgentDefinitionMinimal> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accepted_functions": n => { functionAgentDefinitionMinimal.acceptedFunctions = n.getCollectionOfObjectValues<FunctionSpecSchema>(createFunctionSpecSchemaFromDiscriminatorValue); },
        "agent_name": n => { functionAgentDefinitionMinimal.agentName = n.getStringValue(); },
        "agent_parameters": n => { functionAgentDefinitionMinimal.agentParameters = n.getObjectValue<FunctionAgentDefinitionMinimal_agent_parameters>(createFunctionAgentDefinitionMinimal_agent_parametersFromDiscriminatorValue); },
        "description": n => { functionAgentDefinitionMinimal.description = n.getStringValue(); },
        "functions_allowed_to_generate": n => { functionAgentDefinitionMinimal.functionsAllowedToGenerate = n.getCollectionOfObjectValues<FunctionSpecSchema>(createFunctionSpecSchemaFromDiscriminatorValue); },
        "topics": n => { functionAgentDefinitionMinimal.topics = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFunctionAgentDefinitionMinimal_agent_parameters(functionAgentDefinitionMinimal_agent_parameters: Partial<FunctionAgentDefinitionMinimal_agent_parameters> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFunctionCallBlackboardInput(functionCallBlackboardInput: Partial<FunctionCallBlackboardInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "format": n => { functionCallBlackboardInput.format = n.getEnumValue<BlackboardFormat>(BlackboardFormatObject); },
        "internal_newly_generated_functions": n => { functionCallBlackboardInput.internalNewlyGeneratedFunctions = n.getCollectionOfObjectValues<FunctionCallSchema>(createFunctionCallSchemaFromDiscriminatorValue); },
        "internal_newly_generated_messages": n => { functionCallBlackboardInput.internalNewlyGeneratedMessages = n.getCollectionOfObjectValues<Message>(createMessageFromDiscriminatorValue); },
        "internal_previously_generated_functions": n => { functionCallBlackboardInput.internalPreviouslyGeneratedFunctions = n.getCollectionOfObjectValues<FunctionCallSchema>(createFunctionCallSchemaFromDiscriminatorValue); },
        "internal_previous_messages": n => { functionCallBlackboardInput.internalPreviousMessages = n.getCollectionOfObjectValues<Message>(createMessageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFunctionCallBlackboardOutput(functionCallBlackboardOutput: Partial<FunctionCallBlackboardOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "format": n => { functionCallBlackboardOutput.format = n.getEnumValue<BlackboardFormat>(BlackboardFormatObject); },
        "internal_newly_generated_functions": n => { functionCallBlackboardOutput.internalNewlyGeneratedFunctions = n.getCollectionOfObjectValues<FunctionCallSchema>(createFunctionCallSchemaFromDiscriminatorValue); },
        "internal_newly_generated_messages": n => { functionCallBlackboardOutput.internalNewlyGeneratedMessages = n.getCollectionOfObjectValues<Message>(createMessageFromDiscriminatorValue); },
        "internal_previously_generated_functions": n => { functionCallBlackboardOutput.internalPreviouslyGeneratedFunctions = n.getCollectionOfObjectValues<FunctionCallSchema>(createFunctionCallSchemaFromDiscriminatorValue); },
        "internal_previous_messages": n => { functionCallBlackboardOutput.internalPreviousMessages = n.getCollectionOfObjectValues<Message>(createMessageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFunctionCallGenerateRequest(functionCallGenerateRequest: Partial<FunctionCallGenerateRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "agent_definitions": n => { functionCallGenerateRequest.agentDefinitions = n.getCollectionOfObjectValues<FunctionAgentDefinitionMinimal>(createFunctionAgentDefinitionMinimalFromDiscriminatorValue); },
        "blackboard": n => { functionCallGenerateRequest.blackboard = n.getObjectValue<FunctionCallBlackboardInput>(createFunctionCallBlackboardInputFromDiscriminatorValue); },
        "chat_agent_description": n => { functionCallGenerateRequest.chatAgentDescription = n.getStringValue(); },
        "execution_plan": n => { functionCallGenerateRequest.executionPlan = n.getObjectValue<AgentExecutionPlanSchema>(createAgentExecutionPlanSchemaFromDiscriminatorValue); },
        "user_prompt": n => { functionCallGenerateRequest.userPrompt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFunctionCallSchema(functionCallSchema: Partial<FunctionCallSchema> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "agent_name": n => { functionCallSchema.agentName = n.getStringValue(); },
        "function_name": n => { functionCallSchema.functionName = n.getStringValue(); },
        "parameters": n => { functionCallSchema.parameters = n.getObjectValue<FunctionCallSchema_parameters>(createFunctionCallSchema_parametersFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFunctionCallSchema_parameters(functionCallSchema_parameters: Partial<FunctionCallSchema_parameters> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFunctionSpecSchema(functionSpecSchema: Partial<FunctionSpecSchema> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { functionSpecSchema.description = n.getStringValue(); },
        "function_name": n => { functionSpecSchema.functionName = n.getStringValue(); },
        "parameters": n => { functionSpecSchema.parameters = n.getCollectionOfObjectValues<ParameterSpec>(createParameterSpecFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGeneratePlanRequest(generatePlanRequest: Partial<GeneratePlanRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "agent_descriptions": n => { generatePlanRequest.agentDescriptions = n.getCollectionOfObjectValues<AgentDescription>(createAgentDescriptionFromDiscriminatorValue); },
        "chat_agent_description": n => { generatePlanRequest.chatAgentDescription = n.getStringValue(); },
        "previous_plan": n => { generatePlanRequest.previousPlan = n.getObjectValue<AgentExecutionPlanSchema>(createAgentExecutionPlanSchemaFromDiscriminatorValue); },
        "user_prompt": n => { generatePlanRequest.userPrompt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHTTPValidationError(hTTPValidationError: Partial<HTTPValidationError> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "detail": n => { hTTPValidationError.detail = n.getCollectionOfObjectValues<ValidationError>(createValidationErrorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMessage(message: Partial<Message> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "message": n => { message.message = n.getStringValue(); },
        "role": n => { message.role = n.getEnumValue<MessageRole>(MessageRoleObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoParameterSpec(parameterSpec: Partial<ParameterSpec> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allowed_values": n => { parameterSpec.allowedValues = n.getCollectionOfPrimitiveValues<string>(); },
        "name": n => { parameterSpec.name = n.getStringValue(); },
        "type": n => { parameterSpec.type = n.getEnumValue<ParameterType>(ParameterTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRecommendedAgent(recommendedAgent: Partial<RecommendedAgent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "agent_name": n => { recommendedAgent.agentName = n.getStringValue(); },
        "agent_parameters": n => { recommendedAgent.agentParameters = n.getObjectValue<RecommendedAgent_agent_parameters>(createRecommendedAgent_agent_parametersFromDiscriminatorValue); },
        "rewritten_user_prompt": n => { recommendedAgent.rewrittenUserPrompt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRecommendedAgent_agent_parameters(recommendedAgent_agent_parameters: Partial<RecommendedAgent_agent_parameters> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoValidationError(validationError: Partial<ValidationError> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "loc": n => { validationError.loc = n.getCollectionOfPrimitiveValues<string>(); },
        "msg": n => { validationError.msg = n.getStringValue(); },
        "type": n => { validationError.type = n.getStringValue(); },
    }
}
export interface FunctionAgentDefinitionMinimal extends Parsable {
    /**
     * The set of 'input' function calls that this agent understands. Each agent should understand its own output, but can also understand a subset of the output of other agents. This allows the agents to collaborate.
     */
    acceptedFunctions?: FunctionSpecSchema[] | null;
    /**
     * The name of the agent
     */
    agentName?: string | null;
    /**
     * A list of agent parameters to extract from the user prompt
     */
    agentParameters?: FunctionAgentDefinitionMinimal_agent_parameters | null;
    /**
     * The description of this agent, its purpose and capabilities.
     */
    description?: string | null;
    /**
     * The set of 'output' function calls that this agent generates.
     */
    functionsAllowedToGenerate?: FunctionSpecSchema[] | null;
    /**
     * This agent ONLY generates if user mentioned one of these topics
     */
    topics?: string[] | null;
}
/**
 * A list of agent parameters to extract from the user prompt
 */
export interface FunctionAgentDefinitionMinimal_agent_parameters extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface FunctionCallBlackboardInput extends Parsable {
    /**
     * The format property
     */
    format?: BlackboardFormat | null;
    /**
     * The internal_newly_generated_functions property
     */
    internalNewlyGeneratedFunctions?: FunctionCallSchema[] | null;
    /**
     * The internal_newly_generated_messages property
     */
    internalNewlyGeneratedMessages?: Message[] | null;
    /**
     * All previously generated functions: either from client (representing its data) or from agents in this generation
     */
    internalPreviouslyGeneratedFunctions?: FunctionCallSchema[] | null;
    /**
     * The internal_previous_messages property
     */
    internalPreviousMessages?: Message[] | null;
}
export interface FunctionCallBlackboardOutput extends Parsable {
    /**
     * The format property
     */
    format?: BlackboardFormat | null;
    /**
     * The internal_newly_generated_functions property
     */
    internalNewlyGeneratedFunctions?: FunctionCallSchema[] | null;
    /**
     * The internal_newly_generated_messages property
     */
    internalNewlyGeneratedMessages?: Message[] | null;
    /**
     * All previously generated functions: either from client (representing its data) or from agents in this generation
     */
    internalPreviouslyGeneratedFunctions?: FunctionCallSchema[] | null;
    /**
     * The internal_previous_messages property
     */
    internalPreviousMessages?: Message[] | null;
}
export interface FunctionCallGenerateRequest extends Parsable {
    /**
     * The defintions of the Agents to execute, in order.
     */
    agentDefinitions?: FunctionAgentDefinitionMinimal[] | null;
    /**
     * Optionally include the previous Blackboard state, to have a conversation (avoids stateless server). This contains previous state and new data (which the user has updated either by executing its implementation of Function Calls).
     */
    blackboard?: FunctionCallBlackboardInput | null;
    /**
     * Describe the purpose and domain of this chat system.
     */
    chatAgentDescription?: string | null;
    /**
     * Optionally also include a previously generated plan, to reduce latency. If no plan is included, then generate will also internally call generate_plan.
     */
    executionPlan?: AgentExecutionPlanSchema | null;
    /**
     * The input from the user
     */
    userPrompt?: string | null;
}
/**
 * This schema represents a function call that was already generated.
 */
export interface FunctionCallSchema extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The name of the agent that generated the function call
     */
    agentName?: string | null;
    /**
     * The name of the function
     */
    functionName?: string | null;
    /**
     * The named parameters and their values
     */
    parameters?: FunctionCallSchema_parameters | null;
}
/**
 * The named parameters and their values
 */
export interface FunctionCallSchema_parameters extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
/**
 * This schema represents the definition of a function call that can be generated.
 */
export interface FunctionSpecSchema extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Describes what the function does
     */
    description?: string | null;
    /**
     * The name of the function
     */
    functionName?: string | null;
    /**
     * Named parameters of the function
     */
    parameters?: ParameterSpec[] | null;
}
export interface GeneratePlanRequest extends Parsable {
    /**
     * The descriptions of the available Agents. The response will contain the most suitable agents to execute in order.
     */
    agentDescriptions?: AgentDescription[] | null;
    /**
     * Describes the 'fallback' chat agent: if no suitable agents are recommended, this chat agent will be recommended, if the user's prompt is supported. The description should include the purpose and domain of this chat system.
     */
    chatAgentDescription?: string | null;
    /**
     * Optionally also send a previously generated plan, so the AI can generate a new plan taking into account the user's feedback (in user_prompt).
     */
    previousPlan?: AgentExecutionPlanSchema | null;
    /**
     * The input from the user
     */
    userPrompt?: string | null;
}
export interface HTTPValidationError extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The detail property
     */
    detail?: ValidationError[] | null;
}
export interface Message extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The message property
     */
    message?: string | null;
    /**
     * The role property
     */
    role?: MessageRole | null;
}
export type MessageRole = (typeof MessageRoleObject)[keyof typeof MessageRoleObject];
/**
 * Defines one parameter of a function, including its name, type and allowed values. If allowed values are empty, then values must match the 'type'.
 */
export interface ParameterSpec extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The allowed_values property
     */
    allowedValues?: string[] | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * Defines the type of a parameter.
     */
    type?: ParameterType | null;
}
export type ParameterType = (typeof ParameterTypeObject)[keyof typeof ParameterTypeObject];
/**
 * This schema represents one agent that you recommend be used to handle the user's prompt.The recommendation includes the name of the agent, and a version of the user's prompt that has been rewritten to suit that agent.
 */
export interface RecommendedAgent extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The name of the agent
     */
    agentName?: string | null;
    /**
     * Agent Parameters that you extracted from the user's prompt
     */
    agentParameters?: RecommendedAgent_agent_parameters | null;
    /**
     * The user's prompt, rewritten to suit this agent
     */
    rewrittenUserPrompt?: string | null;
}
/**
 * Agent Parameters that you extracted from the user's prompt
 */
export interface RecommendedAgent_agent_parameters extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAgentDescription(writer: SerializationWriter, agentDescription: Partial<AgentDescription> | undefined | null = {}) : void {
    if (agentDescription) {
        writer.writeStringValue("agent_name", agentDescription.agentName);
        writer.writeCollectionOfPrimitiveValues<string>("agent_parameter_names", agentDescription.agentParameterNames);
        writer.writeStringValue("description", agentDescription.description);
        writer.writeCollectionOfPrimitiveValues<string>("topics", agentDescription.topics);
        writer.writeAdditionalData(agentDescription.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAgentExecutionPlanSchema(writer: SerializationWriter, agentExecutionPlanSchema: Partial<AgentExecutionPlanSchema> | undefined | null = {}) : void {
    if (agentExecutionPlanSchema) {
        writer.writeStringValue("chat_message", agentExecutionPlanSchema.chatMessage);
        writer.writeCollectionOfObjectValues<RecommendedAgent>("recommended_agents", agentExecutionPlanSchema.recommendedAgents, serializeRecommendedAgent);
        writer.writeAdditionalData(agentExecutionPlanSchema.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFunctionAgentDefinitionMinimal(writer: SerializationWriter, functionAgentDefinitionMinimal: Partial<FunctionAgentDefinitionMinimal> | undefined | null = {}) : void {
    if (functionAgentDefinitionMinimal) {
        writer.writeCollectionOfObjectValues<FunctionSpecSchema>("accepted_functions", functionAgentDefinitionMinimal.acceptedFunctions, serializeFunctionSpecSchema);
        writer.writeStringValue("agent_name", functionAgentDefinitionMinimal.agentName);
        writer.writeObjectValue<FunctionAgentDefinitionMinimal_agent_parameters>("agent_parameters", functionAgentDefinitionMinimal.agentParameters, serializeFunctionAgentDefinitionMinimal_agent_parameters);
        writer.writeStringValue("description", functionAgentDefinitionMinimal.description);
        writer.writeCollectionOfObjectValues<FunctionSpecSchema>("functions_allowed_to_generate", functionAgentDefinitionMinimal.functionsAllowedToGenerate, serializeFunctionSpecSchema);
        writer.writeCollectionOfPrimitiveValues<string>("topics", functionAgentDefinitionMinimal.topics);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFunctionAgentDefinitionMinimal_agent_parameters(writer: SerializationWriter, functionAgentDefinitionMinimal_agent_parameters: Partial<FunctionAgentDefinitionMinimal_agent_parameters> | undefined | null = {}) : void {
    if (functionAgentDefinitionMinimal_agent_parameters) {
        writer.writeAdditionalData(functionAgentDefinitionMinimal_agent_parameters.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFunctionCallBlackboardInput(writer: SerializationWriter, functionCallBlackboardInput: Partial<FunctionCallBlackboardInput> | undefined | null = {}) : void {
    if (functionCallBlackboardInput) {
        writer.writeEnumValue<BlackboardFormat>("format", functionCallBlackboardInput.format);
        writer.writeCollectionOfObjectValues<FunctionCallSchema>("internal_newly_generated_functions", functionCallBlackboardInput.internalNewlyGeneratedFunctions, serializeFunctionCallSchema);
        writer.writeCollectionOfObjectValues<Message>("internal_newly_generated_messages", functionCallBlackboardInput.internalNewlyGeneratedMessages, serializeMessage);
        writer.writeCollectionOfObjectValues<FunctionCallSchema>("internal_previously_generated_functions", functionCallBlackboardInput.internalPreviouslyGeneratedFunctions, serializeFunctionCallSchema);
        writer.writeCollectionOfObjectValues<Message>("internal_previous_messages", functionCallBlackboardInput.internalPreviousMessages, serializeMessage);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFunctionCallBlackboardOutput(writer: SerializationWriter, functionCallBlackboardOutput: Partial<FunctionCallBlackboardOutput> | undefined | null = {}) : void {
    if (functionCallBlackboardOutput) {
        writer.writeEnumValue<BlackboardFormat>("format", functionCallBlackboardOutput.format);
        writer.writeCollectionOfObjectValues<FunctionCallSchema>("internal_newly_generated_functions", functionCallBlackboardOutput.internalNewlyGeneratedFunctions, serializeFunctionCallSchema);
        writer.writeCollectionOfObjectValues<Message>("internal_newly_generated_messages", functionCallBlackboardOutput.internalNewlyGeneratedMessages, serializeMessage);
        writer.writeCollectionOfObjectValues<FunctionCallSchema>("internal_previously_generated_functions", functionCallBlackboardOutput.internalPreviouslyGeneratedFunctions, serializeFunctionCallSchema);
        writer.writeCollectionOfObjectValues<Message>("internal_previous_messages", functionCallBlackboardOutput.internalPreviousMessages, serializeMessage);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFunctionCallGenerateRequest(writer: SerializationWriter, functionCallGenerateRequest: Partial<FunctionCallGenerateRequest> | undefined | null = {}) : void {
    if (functionCallGenerateRequest) {
        writer.writeCollectionOfObjectValues<FunctionAgentDefinitionMinimal>("agent_definitions", functionCallGenerateRequest.agentDefinitions, serializeFunctionAgentDefinitionMinimal);
        writer.writeObjectValue<FunctionCallBlackboardInput>("blackboard", functionCallGenerateRequest.blackboard, serializeFunctionCallBlackboardInput);
        writer.writeStringValue("chat_agent_description", functionCallGenerateRequest.chatAgentDescription);
        writer.writeObjectValue<AgentExecutionPlanSchema>("execution_plan", functionCallGenerateRequest.executionPlan, serializeAgentExecutionPlanSchema);
        writer.writeStringValue("user_prompt", functionCallGenerateRequest.userPrompt);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFunctionCallSchema(writer: SerializationWriter, functionCallSchema: Partial<FunctionCallSchema> | undefined | null = {}) : void {
    if (functionCallSchema) {
        writer.writeStringValue("agent_name", functionCallSchema.agentName);
        writer.writeStringValue("function_name", functionCallSchema.functionName);
        writer.writeObjectValue<FunctionCallSchema_parameters>("parameters", functionCallSchema.parameters, serializeFunctionCallSchema_parameters);
        writer.writeAdditionalData(functionCallSchema.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFunctionCallSchema_parameters(writer: SerializationWriter, functionCallSchema_parameters: Partial<FunctionCallSchema_parameters> | undefined | null = {}) : void {
    if (functionCallSchema_parameters) {
        writer.writeAdditionalData(functionCallSchema_parameters.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFunctionSpecSchema(writer: SerializationWriter, functionSpecSchema: Partial<FunctionSpecSchema> | undefined | null = {}) : void {
    if (functionSpecSchema) {
        writer.writeStringValue("description", functionSpecSchema.description);
        writer.writeStringValue("function_name", functionSpecSchema.functionName);
        writer.writeCollectionOfObjectValues<ParameterSpec>("parameters", functionSpecSchema.parameters, serializeParameterSpec);
        writer.writeAdditionalData(functionSpecSchema.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGeneratePlanRequest(writer: SerializationWriter, generatePlanRequest: Partial<GeneratePlanRequest> | undefined | null = {}) : void {
    if (generatePlanRequest) {
        writer.writeCollectionOfObjectValues<AgentDescription>("agent_descriptions", generatePlanRequest.agentDescriptions, serializeAgentDescription);
        writer.writeStringValue("chat_agent_description", generatePlanRequest.chatAgentDescription);
        writer.writeObjectValue<AgentExecutionPlanSchema>("previous_plan", generatePlanRequest.previousPlan, serializeAgentExecutionPlanSchema);
        writer.writeStringValue("user_prompt", generatePlanRequest.userPrompt);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHTTPValidationError(writer: SerializationWriter, hTTPValidationError: Partial<HTTPValidationError> | undefined | null = {}) : void {
    if (hTTPValidationError) {
        writer.writeCollectionOfObjectValues<ValidationError>("detail", hTTPValidationError.detail, serializeValidationError);
        writer.writeAdditionalData(hTTPValidationError.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMessage(writer: SerializationWriter, message: Partial<Message> | undefined | null = {}) : void {
    if (message) {
        writer.writeStringValue("message", message.message);
        writer.writeEnumValue<MessageRole>("role", message.role);
        writer.writeAdditionalData(message.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeParameterSpec(writer: SerializationWriter, parameterSpec: Partial<ParameterSpec> | undefined | null = {}) : void {
    if (parameterSpec) {
        writer.writeCollectionOfPrimitiveValues<string>("allowed_values", parameterSpec.allowedValues);
        writer.writeStringValue("name", parameterSpec.name);
        writer.writeEnumValue<ParameterType>("type", parameterSpec.type);
        writer.writeAdditionalData(parameterSpec.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRecommendedAgent(writer: SerializationWriter, recommendedAgent: Partial<RecommendedAgent> | undefined | null = {}) : void {
    if (recommendedAgent) {
        writer.writeStringValue("agent_name", recommendedAgent.agentName);
        writer.writeObjectValue<RecommendedAgent_agent_parameters>("agent_parameters", recommendedAgent.agentParameters, serializeRecommendedAgent_agent_parameters);
        writer.writeStringValue("rewritten_user_prompt", recommendedAgent.rewrittenUserPrompt);
        writer.writeAdditionalData(recommendedAgent.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRecommendedAgent_agent_parameters(writer: SerializationWriter, recommendedAgent_agent_parameters: Partial<RecommendedAgent_agent_parameters> | undefined | null = {}) : void {
    if (recommendedAgent_agent_parameters) {
        writer.writeAdditionalData(recommendedAgent_agent_parameters.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeValidationError(writer: SerializationWriter, validationError: Partial<ValidationError> | undefined | null = {}) : void {
    if (validationError) {
        writer.writeCollectionOfPrimitiveValues<string>("loc", validationError.loc);
        writer.writeStringValue("msg", validationError.msg);
        writer.writeStringValue("type", validationError.type);
        writer.writeAdditionalData(validationError.additionalData);
    }
}
export interface ValidationError extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The loc property
     */
    loc?: string[] | null;
    /**
     * The msg property
     */
    msg?: string | null;
    /**
     * The type property
     */
    type?: string | null;
}
export const BlackboardFormatObject = {
    Function_call: "function_call",
    Graphql: "graphql",
} as const;
export const MessageRoleObject = {
    User: "user",
    Assistant: "assistant",
} as const;
/**
 * Defines the type of a parameter.
 */
export const ParameterTypeObject = {
    Int: "int",
    Float: "float",
    String: "string",
    Datetime: "datetime",
} as const;
/* tslint:enable */
/* eslint-enable */
